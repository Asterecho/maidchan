基本构成 ?
一个Ghost的成型至少包含下列三种资料

．定义Ghost基本资料的描述文件：descript.txt。
．记述人格对话、动作的脚本。日文是写作"辞书"，原意为字典，实际上是一个或多个程式语法档的集合。
．解析脚本并转为SakuraScript给SSP核心程式运行的DLL档案：SHIORI、MAKOTO等。
↑
先来点导引观念-1 descript.txt篇 ?
下面会继续探讨各个部分所代表的功用，但可能会有点混乱(其实这部份教学还不知道要怎么写比较好，所以先提供这个导引观念篇。)，请先停一下看看这个段落。

原则上descript.txt比较容易理解，在descript.txt里记载了这个人格所使用的文字编码、人格名称、伪AI(Shiori)档案名称等设定。

透过这个档案，SSP核心程式才会知道要载入怎样的核心程式，还有一些人格的基本资讯，如名字等等，才能在"人格切换"的选单功能中，将各个人格的名称显示出来。

descript.txt档案有个特性：档名是固定的，不会变更。SSP核心程式第一个读取的一定是这个档案。

↑
先来点导引观念-2 脚本篇 ?
在日文里面，是用"辞书"来称呼这些档案。原则上这些档案是纯文字档型态，内容通常包括一些伪AI(Shiori)所提供的语法以及程式架构。

例如橘花的ai_2t.txt大概是这样：

 这些看起来很类似程式语法的东西，其实是伪AI所提供的语法，所以当你使用不同的伪AI时，这些语法也会不同。(这些语法是经过整合的高阶语法，与C程式码已经相去甚远，详情可以参考高阶语法?一文)

尽管这些语法已经透过伪AI简化过，但要进行写作的话，玩家还是需要有基本的程式设计概念?。

脚本的主要功能是提供玩家订制自己的伪春菜人格内容，这包括了：

．选单配置
．滑鼠事件
．计时器
．载入外挂程式(SAORI)
．对话内容
．以下...
总之就是一个人格能从对话框里面给予玩家的东西，通通写在这些档案里面了。原则上脚本档案可以全部写在同一个档案内，但一般为了方便整哩，通常会依照所写的功能再分类成好几个不同的档案。

而伪春菜核心程式(或说伪AI)要如何知道这些分散的档案在哪里?其实秘诀就在于"设定档"里面，如同descript.txt，伪AI也会有自独创的设定档，这些设定档的名称与位置由伪AI自行定义，因此您必须要去研读该伪AI的文件，才能了解这个档案是放在哪里。

以AYA?为范例，她的设定档是指与AYA的伪AI档案同名的.txt档案，例如：你将伪AI档案设定为Aya5.dll，则其设定档为Aya5.txt。

而要载入的各个脚本档案资讯，就放在这个"设定档"里面。

接下来请继续看以下的各部分档案详细介诏：

↑
descript.txt ?
人格描述档，用来指定人格的名称、制作者等基本资讯。

标准的descript.txt内容如下：

charset,UTF-8type,ghostname,さくらsakura.name,さくらkero.name,うにゅうcraftman,Fujiaki Kasoricraftmanw,圭反藤谅craftmanurl,http://sakura.mikage.to/icon,sakura.icoshiori,first.dllmakoto,firstr.dll．‘charset’可设定文字编码，请依照你所撰写的人格所使用的编码进行设定，例如UTF-8，Shift_JIS、BIG5、GB2312等。但要注意这个设定并非万能，如果你所使用的伪AI不支援多国语系，那么即使这个地方设定正确，在不同的语系环境时还是会遭遇严重的乱码问题。伪春菜的多国语系支援是目前尚不能好好解决的问题，因为这个没有强制标准，目前除了少数几个伪AI，大部分都是只支援日文语系编码的。
．‘type’是档案类别，有ghost、shell、ballon等几种，是人格本体的话设为ghost即可。
．‘name’即人格总体资料的名称，嫌命名麻烦的话就直接用人格角色名即可。
．‘sakura.name’及‘kero.name’是人格的角色名称。
．‘craftman’部份则是作者的相关资讯。
．‘icon’设定的图示会把右下角的核心程式图示换掉。
．‘shiori’跟‘makoto’都是伪AI的部份，请务必设定正确。
其他详细的规格请参见GhostDescription?。

↑
Shiori.dll ?
Shiori负责解析人格辞书资料，选出适当的词句，组合成对话。是让人格活泼起来的重要关键。 事件发生的时候（例如对时、说话、Communicate、Ballon选单..）， 核心程式都会呼叫Shiori，而Shiori就生成相对应的对话传回。

藉由设定人格的反应以及会话内容，让Shiori产生了看似AI行为的这样一个过程，我们称之为‘伪AI’，或者‘人工无脑*1’。

由于Shiori是开放规格，所以有很多种现成的Shiori可以使用。 不同的人格，可能使用不同的Shiori跟Makoto。目前常见的有华和梨、文、美坂等等。

一般说来，自己写人格的时候，就是撰写供Shiori处理的人格资料。 不同的Shiori，人格资料的写法也不一样。通常是夹杂对话资料和简单程式码的文字档。 对话资料必须使用Sakura Script写成。性质有点像写网页使用的HTML。程式的部分，大多的Shiori也提供变数、事件、条件判断、回圈等等像是程式语言的 功能。甚至也有人用Shiori提供的功能写成小游戏的，像是まゆら这个有名的人格。

但是，不会写程式的人也别放弃得太早。也有方法可以不需要撰写复杂的程式的，伪春菜中有所谓‘人格范本’这样的东西，像是华和梨的KEEPS?、文的绀野ややめ?这样的东西，已经帮你写好了大部分的功能，只要把对话的部份稍做修改，便能做出一个专属于自己的人格。

Shiori的汉字是刊。
命名来源是日本Key公司出版的游戏“Kanon”中的人物“美坂　刊”=_=|||

各Shiori的详细说明请参照SHIORI?。

注意：Shiori档案不一定就叫做Shiori.dll，这个名称是可以任意更动的，并没有固定标准，实际档名请参考descript.txt内的shiori设定值。↑
Makoto.dll ?
Makoto负责第二阶段的处理。接管Shiori传回的资料，被称为“Translator”。经由内外部伺服器接收到Nanika的资料，也会经过makoto的处理。 它是选择性的元件，在Shiori的发展日趋强大之后，使用到Makoto的人格也愈来愈少了。 主要负责句子的“加工”，如语尾变化等等。 Makoto也是开放的规格，和Shiori比较起来，功能就比较不那么固定。 不才撰写的转码元件，就是在这个阶段，替对话做转码的动作。

Makoto的汉字是“真琴”。
命名来源同样是“Kanon”中的人物“泽渡　真琴”。=_=|||

↑
Saori.dll ?
想使用Shiori中未搭载的功能时，就必须藉助SAORI这样的东西来完成我们的要求，像是变更桌布、播放音乐等。每个Shiori载入SAORI的方式都不一样，这部份请参看各Shiori专有的说明书。

详细说明请参照SAORI?。

注意：saori档案不一定就叫做saori.dll，这个名称是可以任意更动的，并没有固定标准，实际档名也不好捉摸。这个不像是shiori有标准的descript.txt记载。有时候你必须要去搜索各种资料才知道到正确用法。↑
thumbnail.pnr ?
如果你想要让你的Ghost有透明的banner图，只要制作好相关的图示，背景设定为红或蓝色(三原色)，存成 thumbnail.png，再将thumbnail.png副档名更名为.pnr，这样核心程式就会取该张图片座标的(0,0)位置的颜色为透明颜色，效果跟shell目录底下的surface.png系列相同。

这个档案放在Ghost_Name主目录下或者ghostmaster都可以。

↑
AI的写法? ?
关于人格资料的详细撰写方法， 因为各家shiori的语法各异，且不是三言二语能讲完的，所以会慢慢另外开设专栏介绍。

目前您最需要的是将档案的配置方式弄懂，如此一来无论是日后要编写AI或者仅是想修改自己喜欢的人格等都能得心应手。

现在站上已经有AYA?的说明文件了，建议您先看完人格概要?与本篇之后，进入该专栏文章中一探究竟，详细的撰写方法会在那边提及
